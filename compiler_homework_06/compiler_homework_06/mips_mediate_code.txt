@array int[] arr 10
@array int[] tmp 10
@call main
@exit
@func merge
@para int l2
@para int s2
@para int l1
@para int s1
@var int i
@var int j
@var int k
i = 0
j = 0
#0 = s1
#1 = #0
k = #1
merge_L_0_while_begin :
#2 = i
#3 = #2
#4 = l1
#5 = #4
#3 = #3 LSS #5
@beqz #3 merge_L_1_while_over
#6 = j
#7 = #6
#8 = l2
#9 = #8
#7 = #7 LSS #9
@beqz #7 merge_L_2_else_begin
#10 = s1
#11 = #10
#12 = i
#11 = #11 PLUS #12
#13 = arr ARGET #11
#14 = #13
#15 = #14
#16 = s2
#17 = #16
#18 = j
#17 = #17 PLUS #18
#19 = arr ARGET #17
#20 = #19
#21 = #20
#15 = #15 GRE #21
@beqz #15 merge_L_4_else_begin
#22 = k
#23 = #22
#24 = s2
#25 = #24
#26 = j
#25 = #25 PLUS #26
#27 = arr ARGET #25
#28 = #27
#29 = #28
tmp = #23 ARSET #29
#30 = j
#31 = #30
#31 = #31 PLUS 1
j = #31
@j merge_L_5_else_over
merge_L_4_else_begin :
#32 = k
#33 = #32
#34 = s1
#35 = #34
#36 = i
#35 = #35 PLUS #36
#37 = arr ARGET #35
#38 = #37
#39 = #38
tmp = #33 ARSET #39
#40 = i
#41 = #40
#41 = #41 PLUS 1
i = #41
merge_L_5_else_over :
#42 = k
#43 = #42
#43 = #43 PLUS 1
k = #43
@j merge_L_3_else_over
merge_L_2_else_begin :
merge_L_6_while_begin :
#44 = i
#45 = #44
#46 = l1
#47 = #46
#45 = #45 LSS #47
@beqz #45 merge_L_7_while_over
#48 = k
#49 = #48
#50 = s1
#51 = #50
#52 = i
#51 = #51 PLUS #52
#53 = arr ARGET #51
#54 = #53
#55 = #54
tmp = #49 ARSET #55
#56 = k
#57 = #56
#57 = #57 PLUS 1
k = #57
#58 = i
#59 = #58
#59 = #59 PLUS 1
i = #59
@j merge_L_6_while_begin
merge_L_7_while_over :
merge_L_3_else_over :
@j merge_L_0_while_begin
merge_L_1_while_over :
merge_L_8_while_begin :
#60 = j
#61 = #60
#62 = l2
#63 = #62
#61 = #61 LSS #63
@beqz #61 merge_L_9_while_over
#64 = k
#65 = #64
#66 = s2
#67 = #66
#68 = j
#67 = #67 PLUS #68
#69 = arr ARGET #67
#70 = #69
#71 = #70
tmp = #65 ARSET #71
#72 = k
#73 = #72
#73 = #73 PLUS 1
k = #73
#74 = j
#75 = #74
#75 = #75 PLUS 1
j = #75
@j merge_L_8_while_begin
merge_L_9_while_over :
#76 = s1
#77 = #76
i = #77
merge_L_10_for_begin :
#78 = i
#79 = #78
#80 = k
#81 = #80
#79 = #79 LSS #81
@beqz #79 merge_L_11_for_over
#82 = i
#83 = #82
#84 = i
#85 = #84
#86 = tmp ARGET #85
#87 = #86
#88 = #87
arr = #83 ARSET #88
i = i PLUS 1
@j merge_L_10_for_begin
merge_L_11_for_over :
@ret
@func inner_merge_sort
@para int length
@para int start
@var int tmp
@var int mid
#89 = length
#90 = #89
#90 = #90 LEQ 1
@beqz #90 inner_merge_sort_L_12_else_begin
@ret
inner_merge_sort_L_12_else_begin :
#91 = length
#92 = #91
#92 = #92 EQL 2
@beqz #92 inner_merge_sort_L_14_else_begin
#93 = start
#94 = #93
#95 = arr ARGET #94
#96 = #95
#97 = #96
#98 = start
#99 = #98
#99 = #99 PLUS 1
#100 = arr ARGET #99
#101 = #100
#102 = #101
#97 = #97 GRE #102
@beqz #97 inner_merge_sort_L_16_else_begin
#103 = start
#104 = #103
#105 = arr ARGET #104
#106 = #105
#107 = #106
tmp = #107
#108 = start
#109 = #108
#110 = start
#111 = #110
#111 = #111 PLUS 1
#112 = arr ARGET #111
#113 = #112
#114 = #113
arr = #109 ARSET #114
#115 = start
#116 = #115
#116 = #116 PLUS 1
#117 = tmp
#118 = #117
arr = #116 ARSET #118
inner_merge_sort_L_16_else_begin :
@ret
inner_merge_sort_L_14_else_begin :
#119 = length
#119 = #119 DIV 2
#120 = #119
mid = #120
#121 = start
#122 = #121
@push #122
#123 = mid
#124 = #123
@push #124
@call inner_merge_sort
#125 = start
#126 = #125
#127 = mid
#126 = #126 PLUS #127
@push #126
#128 = length
#129 = #128
#130 = mid
#129 = #129 MINU #130
@push #129
@call inner_merge_sort
#131 = start
#132 = #131
@push #132
#133 = mid
#134 = #133
@push #134
#135 = start
#136 = #135
#137 = mid
#136 = #136 PLUS #137
@push #136
#138 = length
#139 = #138
#140 = mid
#139 = #139 MINU #140
@push #139
@call merge
@ret
@func main
@var int n
@var int i
@var int a
@printf string 8 String_0
@newline
@scanf int n
i = 0
main_L_18_for_begin :
#141 = i
#142 = #141
#143 = n
#144 = #143
#142 = #142 LSS #144
@beqz #142 main_L_19_for_over
@scanf int a
#145 = i
#146 = #145
#147 = a
#148 = #147
arr = #146 ARSET #148
i = i PLUS 1
@j main_L_18_for_begin
main_L_19_for_over :
@push 0
#149 = n
#150 = #149
@push #150
@call inner_merge_sort
i = 0
main_L_20_for_begin :
#151 = i
#152 = #151
#153 = n
#154 = #153
#152 = #152 LSS #154
@beqz #152 main_L_21_for_over
#155 = i
#156 = #155
#157 = arr ARGET #156
#158 = #157
#159 = #158
@printf int #159
@newline
i = i PLUS 1
@j main_L_20_for_begin
main_L_21_for_over :
@ret
