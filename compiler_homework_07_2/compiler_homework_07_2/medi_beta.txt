@array int[] arr 10
@array int[] tmp 10
@call main
@exit
@func merge
@para int s1
@para int l1
@para int s2
@para int l2
@var int i
@var int j
@var int k
i = 0
j = 0
#0 = s1
#1 = #0
k = #1
merge_L_0_while_begin :
#2 = i
#3 = #2
#4 = l1
#5 = #4
#3 = #3 LSS #5
@beqz #3 merge_L_1_while_over
#2 = j
#3 = #2
#4 = l2
#5 = #4
#3 = #3 LSS #5
@beqz #3 merge_L_2_else_begin
#2 = s1
#3 = #2
#4 = i
#3 = #3 PLUS #4
#5 = arr ARGET #3
#6 = #5
#7 = #6
#8 = s2
#9 = #8
#10 = j
#9 = #9 PLUS #10
#11 = arr ARGET #9
#12 = #11
#13 = #12
#7 = #7 GRE #13
@beqz #7 merge_L_4_else_begin
#2 = k
#3 = #2
#4 = s2
#5 = #4
#6 = j
#5 = #5 PLUS #6
#7 = arr ARGET #5
#8 = #7
#9 = #8
tmp = #3 ARSET #9
#10 = j
#11 = #10
#11 = #11 PLUS 1
j = #11
@j merge_L_5_else_over
merge_L_4_else_begin :
#12 = k
#13 = #12
#14 = s1
#15 = #14
#16 = i
#15 = #15 PLUS #16
#17 = arr ARGET #15
#18 = #17
#19 = #18
tmp = #13 ARSET #19
#20 = i
#21 = #20
#21 = #21 PLUS 1
i = #21
merge_L_5_else_over :
#12 = k
#13 = #12
#13 = #13 PLUS 1
k = #13
@j merge_L_3_else_over
merge_L_2_else_begin :
merge_L_6_while_begin :
#14 = i
#15 = #14
#16 = l1
#17 = #16
#15 = #15 LSS #17
@beqz #15 merge_L_7_while_over
#14 = k
#15 = #14
#16 = s1
#17 = #16
#18 = i
#17 = #17 PLUS #18
#19 = arr ARGET #17
#20 = #19
#21 = #20
tmp = #15 ARSET #21
#22 = k
#23 = #22
#23 = #23 PLUS 1
k = #23
#24 = i
#25 = #24
#25 = #25 PLUS 1
i = #25
@j merge_L_6_while_begin
merge_L_7_while_over :
merge_L_3_else_over :
@j merge_L_0_while_begin
merge_L_1_while_over :
merge_L_8_while_begin :
#14 = j
#15 = #14
#16 = l2
#17 = #16
#15 = #15 LSS #17
@beqz #15 merge_L_9_while_over
#14 = k
#15 = #14
#16 = s2
#17 = #16
#18 = j
#17 = #17 PLUS #18
#19 = arr ARGET #17
#20 = #19
#21 = #20
tmp = #15 ARSET #21
#22 = k
#23 = #22
#23 = #23 PLUS 1
k = #23
#24 = j
#25 = #24
#25 = #25 PLUS 1
j = #25
@j merge_L_8_while_begin
merge_L_9_while_over :
#14 = s1
#15 = #14
i = #15
merge_L_10_for_begin :
#16 = i
#17 = #16
#18 = k
#19 = #18
#17 = #17 LSS #19
@beqz #17 merge_L_11_for_over
#14 = i
#15 = #14
#16 = i
#17 = #16
#18 = tmp ARGET #17
#19 = #18
#20 = #19
arr = #15 ARSET #20
i = i PLUS 1
@j merge_L_10_for_begin
merge_L_11_for_over :
@ret
@func inner_merge_sort
@para int start
@para int length
@var int tmp
@var int mid
#0 = length
#1 = #0
#1 = #1 LEQ 1
@beqz #1 inner_merge_sort_L_12_else_begin
@ret
inner_merge_sort_L_12_else_begin :
#2 = length
#3 = #2
#3 = #3 EQL 2
@beqz #3 inner_merge_sort_L_14_else_begin
#2 = start
#3 = #2
#4 = arr ARGET #3
#5 = #4
#6 = #5
#7 = start
#8 = #7
#8 = #8 PLUS 1
#9 = arr ARGET #8
#10 = #9
#11 = #10
#6 = #6 GRE #11
@beqz #6 inner_merge_sort_L_16_else_begin
#2 = start
#3 = #2
#4 = arr ARGET #3
#5 = #4
#6 = #5
tmp = #6
#7 = start
#8 = #7
#9 = start
#10 = #9
#10 = #10 PLUS 1
#11 = arr ARGET #10
#12 = #11
#13 = #12
arr = #8 ARSET #13
#14 = start
#15 = #14
#15 = #15 PLUS 1
#16 = tmp
#17 = #16
arr = #15 ARSET #17
inner_merge_sort_L_16_else_begin :
@ret
inner_merge_sort_L_14_else_begin :
#12 = length
#12 = #12 DIV 2
#13 = #12
mid = #13
#14 = start
#15 = #14
@push #15
#16 = mid
#17 = #16
@push #17
@call inner_merge_sort
#18 = start
#19 = #18
#20 = mid
#19 = #19 PLUS #20
@push #19
#21 = length
#22 = #21
#23 = mid
#22 = #22 MINU #23
@push #22
@call inner_merge_sort
#24 = start
#25 = #24
@push #25
#26 = mid
#27 = #26
@push #27
#28 = start
#29 = #28
#30 = mid
#29 = #29 PLUS #30
@push #29
#31 = length
#32 = #31
#33 = mid
#32 = #32 MINU #33
@push #32
@call merge
@ret
@func main
@var int n
@var int i
@var int a
@printf string 8 String_0
@newline
@scanf int n
i = 0
main_L_18_for_begin :
#34 = i
#35 = #34
#36 = n
#37 = #36
#35 = #35 LSS #37
@beqz #35 main_L_19_for_over
@scanf int a
#34 = i
#35 = #34
#36 = a
#37 = #36
arr = #35 ARSET #37
i = i PLUS 1
@j main_L_18_for_begin
main_L_19_for_over :
@push 0
#34 = n
#35 = #34
@push #35
@call inner_merge_sort
i = 0
main_L_20_for_begin :
#36 = i
#37 = #36
#38 = n
#39 = #38
#37 = #37 LSS #39
@beqz #37 main_L_21_for_over
#36 = i
#37 = #36
#38 = arr ARGET #37
#39 = #38
#40 = #39
@printf int #40
@newline
i = i PLUS 1
@j main_L_20_for_begin
main_L_21_for_over :
@ret
