@array int[] arr 10 
@array int[] tmp 10 
@call main   
@exit    
@func merge   
@para int s1  
@para int l1  
@para int s2  
@para int l2  
@var int i  
@var int j  
@var int k  
i = 0  
j = 0  
k = s1  
merge_L_0_while_begin :   
#3 = i  
#5 = l1  
#3 = #3 LSS #5
@beqz #3 merge_L_1_while_over  
#3 = j  
#5 = l2  
#3 = #3 LSS #5
@beqz #3 merge_L_2_else_begin  
#3 = s1  
#4 = i  
#3 = #3 PLUS #4
#5 = arr ARGET #3
#7 = #5  
#9 = s2  
#10 = j  
#9 = #9 PLUS #10
#11 = arr ARGET #9
#13 = #11  
#7 = #7 GRE #13
@beqz #7 merge_L_4_else_begin  
#3 = k  
#5 = s2  
#6 = j  
#5 = #5 PLUS #6
#7 = arr ARGET #5
#9 = #7  
tmp = #3 ARSET #9
#11 = j  
#11 = #11 PLUS 1
j = #11  
@j merge_L_5_else_over   
merge_L_4_else_begin :   
#13 = k  
#15 = s1  
#16 = i  
#15 = #15 PLUS #16
#17 = arr ARGET #15
#19 = #17  
tmp = #13 ARSET #19
#21 = i  
#21 = #21 PLUS 1
i = #21  
merge_L_5_else_over :   
#13 = k  
#13 = #13 PLUS 1
k = #13  
@j merge_L_3_else_over   
merge_L_2_else_begin :   
merge_L_6_while_begin :   
#15 = i  
#17 = l1  
#15 = #15 LSS #17
@beqz #15 merge_L_7_while_over  
#15 = k  
#17 = s1  
#18 = i  
#17 = #17 PLUS #18
#19 = arr ARGET #17
#21 = #19  
tmp = #15 ARSET #21
#23 = k  
#23 = #23 PLUS 1
k = #23  
#25 = i  
#25 = #25 PLUS 1
i = #25  
@j merge_L_6_while_begin   
merge_L_7_while_over :   
merge_L_3_else_over :   
@j merge_L_0_while_begin   
merge_L_1_while_over :   
merge_L_8_while_begin :   
#15 = j  
#17 = l2  
#15 = #15 LSS #17
@beqz #15 merge_L_9_while_over  
#15 = k  
#17 = s2  
#18 = j  
#17 = #17 PLUS #18
#19 = arr ARGET #17
#21 = #19  
tmp = #15 ARSET #21
#23 = k  
#23 = #23 PLUS 1
k = #23  
#25 = j  
#25 = #25 PLUS 1
j = #25  
@j merge_L_8_while_begin   
merge_L_9_while_over :   
i = s1  
merge_L_10_for_begin :   
#17 = i  
#19 = k  
#17 = #17 LSS #19
@beqz #17 merge_L_11_for_over  
#15 = i  
#17 = i  
#18 = tmp ARGET #17
#20 = #18  
arr = #15 ARSET #20
i = i PLUS 1
@j merge_L_10_for_begin   
merge_L_11_for_over :   
@ret    
@func inner_merge_sort   
@para int start  
@para int length  
@var int tmp  
@var int mid  
#1 = length  
#1 = #1 LEQ 1
@beqz #1 inner_merge_sort_L_12_else_begin  
@ret    
inner_merge_sort_L_12_else_begin :   
#3 = length  
#3 = #3 EQL 2
@beqz #3 inner_merge_sort_L_14_else_begin  
#3 = start  
#4 = arr ARGET #3
#6 = #4  
#8 = start  
#8 = #8 PLUS 1
#9 = arr ARGET #8
#11 = #9  
#6 = #6 GRE #11
@beqz #6 inner_merge_sort_L_16_else_begin  
#3 = start  
#4 = arr ARGET #3
tmp = #4  
#8 = start  
#10 = start  
#10 = #10 PLUS 1
#11 = arr ARGET #10
#13 = #11  
arr = #8 ARSET #13
#15 = start  
#15 = #15 PLUS 1
#17 = tmp  
arr = #15 ARSET #17
inner_merge_sort_L_16_else_begin :   
@ret    
inner_merge_sort_L_14_else_begin :   
#12 = length  
#12 = #12 DIV 2
mid = #12  
#15 = start  
#17 = mid  
@push #15
@push #17
@call inner_merge_sort   
#19 = start  
#20 = mid  
#19 = #19 PLUS #20
#22 = length  
#23 = mid  
#22 = #22 MINU #23
@push #19
@push #22
@call inner_merge_sort   
#25 = start  
#27 = mid  
#29 = start  
#30 = mid  
#29 = #29 PLUS #30
#32 = length  
#33 = mid  
#32 = #32 MINU #33
@push #25
@push #27
@push #29
@push #32
@call merge   
@ret    
@func main   
@var int n  
@var int i  
@var int a  
@printf string 8 String_0 
@newline    
@scanf int n  
i = 0  
main_L_18_for_begin :   
#35 = i  
#37 = n  
#35 = #35 LSS #37
@beqz #35 main_L_19_for_over  
@scanf int a  
#35 = i  
#37 = a  
arr = #35 ARSET #37
i = i PLUS 1
@j main_L_18_for_begin   
main_L_19_for_over :   
#35 = n  
@push 0
@push #35
@call inner_merge_sort   
i = 0  
main_L_20_for_begin :   
#37 = i  
#39 = n  
#37 = #37 LSS #39
@beqz #37 main_L_21_for_over  
#37 = i  
#38 = arr ARGET #37
#40 = #38  
@printf int #40  
@newline    
i = i PLUS 1
@j main_L_20_for_begin   
main_L_21_for_over :   
@ret    
    
